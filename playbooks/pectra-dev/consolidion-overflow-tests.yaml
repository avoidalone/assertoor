id: consolidation_overflow_tests
name: "consolidation overflow test"
timeout: 672h
config:
  #walletPrivkey: ""
  depositContract: "0x4242424242424242424242424242424242424242"
  targetAddress: "0x65D08a056c17Ae13370565B04cF77D2AfA1cB9FA"
  validatorMnemonic: "giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
  depositWaitSlot: 34
tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1

  - name: check_consensus_slot_range
    title: "Wait for slot >= ${depositWaitSlot}"
    timeout: 30m
    configVars:
      minSlotNumber: "depositWaitSlot"

  - name: generate_random_mnemonic
    title: "Generate random mnemonic"
    config:
      mnemonicResultVar: "validatorMnemonic"
  - name: generate_child_wallet
    title: "Generate wallet for lifecycle test"
    config:
      prefundMinBalance: 5001000000000000000000 # ensure 5001 ETH
      walletAddressResultVar: "depositorAddress"
      walletPrivateKeyResultVar: "depositorPrivateKey"
    configVars:
      privateKey: "walletPrivkey"
  - name: sleep
    title: "wait for child wallet availablility"
    config:
      duration: 12s # wait 1 slot to ensure all ELs have the proper child wallet balance

  # generate deposits & wait for activation
  - name: run_tasks
    title: "Generate 32 ETH deposit & track inclusion"
    config:
      stopChildOnResult: false
      tasks:
        - name: generate_deposits
          title: "Generate 1 deposits with 32 ETH"
          id: validator_32_eth_deposit
          config:
            limitTotal: 1
            limitPerSlot: 1
            limitPending: 1
            depositAmount: 32
            awaitReceipt: true
            failOnReject: true
          configVars:
            walletPrivkey: "depositorPrivateKey"
            mnemonic: "validatorMnemonic"
            depositContract: "depositContract"
            withdrawalCredentials: "| \"0x020000000000000000000000\" + (.targetAddress | capture(\"(0x)?(?<addr>.+)\").addr)"

  - name: run_tasks
    title: "Generate 2048 ETH deposit & track inclusion"
    config:
      stopChildOnResult: false
      tasks:
        - name: generate_deposits
          title: "Generate 1 deposits with 2048 ETH"
          id: validator_2048_eth_deposit
          config:
            limitTotal: 1
            limitPerSlot: 1
            limitPending: 1
            depositAmount: 2048
            startIndex: 1
            awaitReceipt: true
            failOnReject: true
          configVars:
            walletPrivkey: "depositorPrivateKey"
            mnemonic: "validatorMnemonic"
            depositContract: "depositContract"
            withdrawalCredentials: "| \"0x020000000000000000000000\" + (.targetAddress | capture(\"(0x)?(?<addr>.+)\").addr)"

  - name: check_consensus_validator_status
    title: "Wait for validator to completely be active"
    id: validator_32_eth_info
    timeout: 150m
    config:
      validatorStatus:
        - active_ongoing
    configVars:
      validatorPubKey: "tasks.validator_32_eth_deposit.outputs.validatorPubkeys[0]"

  - name: check_consensus_validator_status
    title: "Wait for validator to completely be active"
    id: validator_2048_eth_info
    timeout: 150m
    config:
      validatorStatus:
        - active_ongoing
    configVars:
      validatorPubKey: "tasks.validator_2048_eth_deposit.outputs.validatorPubkeys[0]"

  - name: run_tasks
    title: "Trigger consolidation overflow"
    config:
      stopChildOnResult: false
      tasks:
      - name: generate_consolidations
        title: "Consolidate Validator ${sourceValidatorIndex} to ${targetValidatorIndex}"
        timeout: 5m
        config:
          failOnReject: true
          awaitReceipt: true
          sourceIndexCount: 2
        configVars:
          walletPrivkey: "walletPrivkey"
          sourceStartValidatorIndex: "tasks.validator_32_eth_info.outputs.validator.index | tonumber"
          targetValidatorIndex: "tasks.validator_2048_eth_info.outputs.validator.index | tonumber"

  - name: check_consensus_validator_status
    title: "Wait for validator to completely exit (${tasks.validator_32_eth_info.outputs.validator.index | tonumber})"
    timeout: 150m
    config:
      validatorStatus:
        - withdrawal_done
    configVars:
      validatorIndex: "tasks.validator_32_eth_info.outputs.validator.index | tonumber"

  - name: run_tasks
    title: "Check consolidation overflow"
    timeout: 10m
    tasks:
    - name: run_shell
      timeout: 5m
      title: "Check targetValidator status is indeed at ceiling of MaxEB"
      config:
        envVars:
          validator: "tasks.validator_2048_eth_info.outputs.validator.index | tonumber"
        command: |
          balance=$(echo "$validator" | jq -r '.balance')
          if [ "$balance" -lt 2079900000000 ]; then
            echo "Balance too low! expected: > 2079.9 ETH, got: $balance Gwei"
            exit 1
          fi
          
          effective_balance=$(echo "$validator" | jq -r '.validator.effective_balance')
          if [ "$effective_balance" != "2048000000000" ]; then
            echo "Effective balance too low! expected: 2048 ETH, got: $effective_balance Gwei"
            exit 1
          fi
          
          withdrawal_creds=$(echo "$validator" | jq -r '.validator.withdrawal_credentials')
          if [[ ! "$withdrawal_creds" == "0x02"* ]]; then
            echo "Invalid withdrawal credentials! expected: 0x02*, got: $withdrawal_creds"
            exit 1
          fi